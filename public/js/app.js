(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

var renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

var geometry = new THREE.BoxGeometry(1, 1, 2);
var material = new THREE.MeshBasicMaterial({ color: 0xBFBFBF });
var cube = new THREE.Mesh(geometry, material);
scene.add(cube);

var charGeometry = new THREE.BoxGeometry(.6, .9, 0.2);
var charMaterial = new THREE.MeshBasicMaterial({ color: 0xA0A0A0 });
var chara = new THREE.Mesh(charGeometry, charMaterial);
scene.add(chara);
var startingXPos = -2.5;

var charXPosition = {
  currentX: startingXPos,
  nextX: startingXPos
};
chara.position.set(charXPosition.currentX, -1.2, 0.7);

var jumpRange = {
  upperBound: 1000,
  lowerBound: 0,
  currentPos: 0,
  isJumping: false
};

var groundGeometry = new THREE.BoxGeometry(12, 0.3, 1);
var groundMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF });
var ground = new THREE.Mesh(groundGeometry, groundMaterial);
scene.add(ground);
ground.position.set(0, -2, 0);
var light = new THREE.PointLight(0x000000);
light.position.set(10, 0, 10);
scene.add(light);
renderer.setClearColor(0xEEEEEE, 1);

camera.position.z = 5;

var minY = -1.2,
    prevY = minY,
    maxFound = false,
    minFound = false,
    maxY = void 0;

var render = function render() {
  requestAnimationFrame(render);

  // cube.rotation.x += 0.02;
  // cube.rotation.y += 0.0225;
  // cube.rotation.z += 0.0175;


  window.addEventListener("keydown", function (event) {
    if (event.keyCode === 39) {
      charXPosition.nextX += .0013;
      // console.log(chara.position.x)
      if (chara.position.x >= 4.9) {
        charXPosition.nextX = 4.9;
      }
    } else if (event.keyCode === 37) {
      charXPosition.nextX += -0.0013;
      // console.log(chara.position.x)
      if (chara.position.x <= -4.795999999999992) {
        charXPosition.nextX = -4.795999999999992;
      }
    } else if (event.keyCode === 38) {
      // console.log(chara.position.y )
      // chara.position.y = -0.4 + 1*Math.sin(dtime/1000);
      // console.log(chara.position.y)
      jumpRange.isJumping = true;
    }
  });

  if (jumpRange.isJumping) {

    jumpRange.currentPos++;

    var charaPositionYCalc = minY + 1 * Math.sin(jumpRange.currentPos / 10);

    if (typeof maxY !== 'number') maxY = charaPositionYCalc;else maxY = chara.position.y > maxY ? charaPositionYCalc : maxY;

    if (typeof minY !== 'number') minY = charaPositionYCalc;else minY = chara.position.y < minY ? charaPositionYCalc : minY;

    if (charaPositionYCalc > maxY && charaPositionYCalc > prevY || prevY === maxY) {
      maxY = Math.max(prevY, charaPositionYCalc);
      // console.log('oh myh god make it stop', maxY, prevY)
    }

    if (charaPositionYCalc <= minY) {
      chara.position.y = minY;
      jumpRange.isJumping = false;
      jumpRange.currentPos = 0;
    } else {
      chara.position.y = charaPositionYCalc;
    }

    prevY = chara.position.y;
  }

  if (chara.position.x < charXPosition.nextX) {
    chara.position.x += .01;
  }

  if (chara.position.x > charXPosition.nextX) {
    chara.position.x -= .01;
  }

  renderer.render(scene, camera);
};

render();

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2NyaXB0cy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQUksUUFBUSxJQUFJLE1BQWhCLEFBQVksQUFBVTtBQUN0QixJQUFJLFNBQVMsSUFBSSxNQUFKLEFBQVUsa0JBQVYsQUFBNkIsSUFBSSxPQUFBLEFBQU8sYUFBVyxPQUFuRCxBQUEwRCxhQUExRCxBQUF1RSxLQUFwRixBQUFhLEFBQTRFOztBQUV6RixJQUFJLFdBQVcsSUFBSSxNQUFuQixBQUFlLEFBQVU7QUFDekIsU0FBQSxBQUFTLFFBQVMsT0FBbEIsQUFBeUIsWUFBWSxPQUFyQyxBQUE0QztBQUM1QyxTQUFBLEFBQVMsS0FBVCxBQUFjLFlBQWEsU0FBM0IsQUFBb0M7O0FBRXBDLElBQUksV0FBVyxJQUFJLE1BQUosQUFBVSxZQUFWLEFBQXVCLEdBQXZCLEFBQTBCLEdBQXpDLEFBQWUsQUFBNkI7QUFDNUMsSUFBSSxXQUFXLElBQUksTUFBSixBQUFVLGtCQUFtQixFQUFFLE9BQTlDLEFBQWUsQUFBNkIsQUFBUztBQUNyRCxJQUFJLE9BQU8sSUFBSSxNQUFKLEFBQVUsS0FBVixBQUFnQixVQUEzQixBQUFXLEFBQTBCO0FBQ3JDLE1BQUEsQUFBTSxJQUFOLEFBQVc7O0FBRVgsSUFBSSxlQUFlLElBQUksTUFBSixBQUFVLFlBQVYsQUFBc0IsSUFBdEIsQUFBMEIsSUFBN0MsQUFBbUIsQUFBOEI7QUFDakQsSUFBSSxlQUFlLElBQUksTUFBSixBQUFVLGtCQUFrQixFQUFFLE9BQWpELEFBQW1CLEFBQTRCLEFBQVM7QUFDeEQsSUFBSSxRQUFRLElBQUksTUFBSixBQUFVLEtBQVYsQUFBZSxjQUEzQixBQUFZLEFBQTZCO0FBQ3pDLE1BQUEsQUFBTSxJQUFOLEFBQVU7QUFDVixJQUFJLGVBQWUsQ0FBbkIsQUFBb0I7O0FBRXBCLElBQUk7WUFBZ0IsQUFDUCxBQUNYO1NBRkYsQUFBb0IsQUFF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UUFBRyxzQkFBSCxBQUF5QixNQUFNLEFBQzdCO1lBQUEsQUFBTSxTQUFOLEFBQWUsSUFBZixBQUFtQixBQUNuQjtnQkFBQSxBQUFVLFlBQVYsQUFBc0IsQUFDdEI7Z0JBQUEsQUFBVSxhQUFWLEFBQXVCLEFBQ3hCO0FBSkQsV0FJTyxBQUNMO1lBQUEsQUFBTSxTQUFOLEFBQWUsSUFBZixBQUFtQixBQUNwQjtBQUVEOztZQUFRLE1BQUEsQUFBTSxTQUFkLEFBQXVCLEFBQ3hCO0FBR0Q7O01BQUcsTUFBQSxBQUFNLFNBQU4sQUFBZSxJQUFLLGNBQXZCLEFBQXFDLE9BQU0sQUFDekM7VUFBQSxBQUFNLFNBQU4sQUFBZSxLQUFmLEFBQW9CLEFBQ3JCO0FBRUQ7O01BQUcsTUFBQSxBQUFNLFNBQU4sQUFBZSxJQUFLLGNBQXZCLEFBQXFDLE9BQU0sQUFDekM7VUFBQSxBQUFNLFNBQU4sQUFBZSxLQUFmLEFBQW9CLEFBQ3JCO0FBSUQ7O1dBQUEsQUFBUyxPQUFULEFBQWdCLE9BQWhCLEFBQXVCLEFBQ3hCO0FBdkVEOztBQXlFQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTtcbnZhciBjYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoIDc1LCB3aW5kb3cuaW5uZXJXaWR0aC93aW5kb3cuaW5uZXJIZWlnaHQsIDAuMSwgMTAwMCApO1xuXG52YXIgcmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcigpO1xucmVuZGVyZXIuc2V0U2l6ZSggd2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCApO1xuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCggcmVuZGVyZXIuZG9tRWxlbWVudCApO1xuXG52YXIgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQm94R2VvbWV0cnkoIDEsIDEsIDIgKTtcbnZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCggeyBjb2xvcjogMHhCRkJGQkYgfSApO1xudmFyIGN1YmUgPSBuZXcgVEhSRUUuTWVzaCggZ2VvbWV0cnksIG1hdGVyaWFsICk7XG5zY2VuZS5hZGQoIGN1YmUgKTtcblxudmFyIGNoYXJHZW9tZXRyeSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeSguNiwgLjksIDAuMik7XG52YXIgY2hhck1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHsgY29sb3I6IDB4QTBBMEEwIH0pXG52YXIgY2hhcmEgPSBuZXcgVEhSRUUuTWVzaChjaGFyR2VvbWV0cnksIGNoYXJNYXRlcmlhbCk7XG5zY2VuZS5hZGQoY2hhcmEpO1xudmFyIHN0YXJ0aW5nWFBvcyA9IC0yLjVcblxudmFyIGNoYXJYUG9zaXRpb24gPSB7XG4gIGN1cnJlbnRYIDogc3RhcnRpbmdYUG9zLFxuICBuZXh0WDpzdGFydGluZ1hQb3Ncbn1cbmNoYXJhLnBvc2l0aW9uLnNldChjaGFyWFBvc2l0aW9uLmN1cnJlbnRYLCAtMS4yLCAwLjcpO1xuXG52YXIganVtcFJhbmdlID0ge1xuICB1cHBlckJvdW5kOiAxMDAwLFxuICBsb3dlckJvdW5kOiAwLFxuICBjdXJyZW50UG9zOiAwLFxuICBpc0p1bXBpbmc6IGZhbHNlXG59XG5cblxudmFyIGdyb3VuZEdlb21ldHJ5ID0gbmV3IFRIUkVFLkJveEdlb21ldHJ5KDEyLDAuMywxKTtcbnZhciBncm91bmRNYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCggeyBjb2xvcjogMHhGRkZGRkYgfSApO1xudmFyIGdyb3VuZCA9IG5ldyBUSFJFRS5NZXNoKCBncm91bmRHZW9tZXRyeSwgZ3JvdW5kTWF0ZXJpYWwgKTtcbnNjZW5lLmFkZCggZ3JvdW5kICk7XG5ncm91bmQucG9zaXRpb24uc2V0KDAsIC0yLCAwKTtcbnZhciBsaWdodCA9IG5ldyBUSFJFRS5Qb2ludExpZ2h0KCAweDAwMDAwMCApO1xubGlnaHQucG9zaXRpb24uc2V0KCAxMCwgMCwgMTAgKTtcbnNjZW5lLmFkZCggbGlnaHQgKTtcbnJlbmRlcmVyLnNldENsZWFyQ29sb3IoIDB4RUVFRUVFLCAxKTtcblxuY2FtZXJhLnBvc2l0aW9uLnogPSA1O1xuXG5sZXQgbWluWSA9IC0xLjIsXG4gICAgcHJldlkgPSBtaW5ZLFxuICAgIG1heEZvdW5kID0gZmFsc2UsXG4gICAgbWluRm91bmQgPSBmYWxzZSxcbiAgICBtYXhZXG5cblxudmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCByZW5kZXIgKTtcblxuICAvLyBjdWJlLnJvdGF0aW9uLnggKz0gMC4wMjtcblx0Ly8gY3ViZS5yb3RhdGlvbi55ICs9IDAuMDIyNTtcblx0Ly8gY3ViZS5yb3RhdGlvbi56ICs9IDAuMDE3NTtcblxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBmdW5jdGlvbihldmVudCl7XG4gICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDM5KXtcbiAgICAgICAgY2hhclhQb3NpdGlvbi5uZXh0WCArPSAuMDAxM1xuICAgICAgLy8gY29uc29sZS5sb2coY2hhcmEucG9zaXRpb24ueClcbiAgICAgIGlmKGNoYXJhLnBvc2l0aW9uLnggPj0gNC45KXtcbiAgICAgICAgY2hhclhQb3NpdGlvbi5uZXh0WCA9IDQuOVxuICAgICAgfVxuICAgIH1lbHNlIGlmIChldmVudC5rZXlDb2RlID09PSAzNyl7XG4gICAgICBjaGFyWFBvc2l0aW9uLm5leHRYICs9IC0wLjAwMTNcbiAgICAgIC8vIGNvbnNvbGUubG9nKGNoYXJhLnBvc2l0aW9uLngpXG4gICAgICBpZihjaGFyYS5wb3NpdGlvbi54IDw9IC00Ljc5NTk5OTk5OTk5OTk5Mil7XG4gICAgICAgIGNoYXJYUG9zaXRpb24ubmV4dFg9IC00Ljc5NTk5OTk5OTk5OTk5MjtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGV2ZW50LmtleUNvZGUgPT09IDM4KXtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGNoYXJhLnBvc2l0aW9uLnkgKVxuICAgICAgLy8gY2hhcmEucG9zaXRpb24ueSA9IC0wLjQgKyAxKk1hdGguc2luKGR0aW1lLzEwMDApO1xuICAgICAgLy8gY29uc29sZS5sb2coY2hhcmEucG9zaXRpb24ueSlcbiAgICAgIGp1bXBSYW5nZS5pc0p1bXBpbmcgPSB0cnVlXG4gICAgfVxufSlcblxuXHRpZihqdW1wUmFuZ2UuaXNKdW1waW5nKXtcblxuICAgIGp1bXBSYW5nZS5jdXJyZW50UG9zKytcblxuICAgIGxldCBjaGFyYVBvc2l0aW9uWUNhbGMgPSBtaW5ZICsgMSpNYXRoLnNpbihqdW1wUmFuZ2UuY3VycmVudFBvcy8xMClcblxuXG4gICAgaWYodHlwZW9mIG1heFkgIT09ICdudW1iZXInKSBtYXhZID0gY2hhcmFQb3NpdGlvbllDYWxjXG4gICAgICBlbHNlIG1heFkgPSBjaGFyYS5wb3NpdGlvbi55ID4gbWF4WSA/IGNoYXJhUG9zaXRpb25ZQ2FsYyA6IG1heFlcblxuICAgIGlmKHR5cGVvZiBtaW5ZICE9PSAnbnVtYmVyJykgbWluWSA9IGNoYXJhUG9zaXRpb25ZQ2FsY1xuICAgICAgZWxzZSBtaW5ZID0gY2hhcmEucG9zaXRpb24ueSA8IG1pblkgPyAgY2hhcmFQb3NpdGlvbllDYWxjIDogbWluWVxuXG5cbiAgICBpZihjaGFyYVBvc2l0aW9uWUNhbGMgPiBtYXhZICYmIGNoYXJhUG9zaXRpb25ZQ2FsYyA+IHByZXZZIHx8IHByZXZZID09PSBtYXhZICApe1xuICAgICAgbWF4WSA9IE1hdGgubWF4KHByZXZZLCBjaGFyYVBvc2l0aW9uWUNhbGMpXG4gICAgICAvLyBjb25zb2xlLmxvZygnb2ggbXloIGdvZCBtYWtlIGl0IHN0b3AnLCBtYXhZLCBwcmV2WSlcbiAgICB9XG5cbiAgICBpZihjaGFyYVBvc2l0aW9uWUNhbGMgPD0gbWluWSApe1xuICAgICAgY2hhcmEucG9zaXRpb24ueSA9IG1pbllcbiAgICAgIGp1bXBSYW5nZS5pc0p1bXBpbmcgPSBmYWxzZVxuICAgICAganVtcFJhbmdlLmN1cnJlbnRQb3MgPSAwXG4gICAgfSBlbHNlIHtcbiAgICAgIGNoYXJhLnBvc2l0aW9uLnkgPSBjaGFyYVBvc2l0aW9uWUNhbGNcbiAgICB9XG5cbiAgICBwcmV2WSA9IGNoYXJhLnBvc2l0aW9uLnlcbiAgfVxuXG5cbiAgaWYoY2hhcmEucG9zaXRpb24ueCAgPCBjaGFyWFBvc2l0aW9uLm5leHRYKXtcbiAgICBjaGFyYS5wb3NpdGlvbi54ICs9IC4wMVxuICB9XG5cbiAgaWYoY2hhcmEucG9zaXRpb24ueCAgPiBjaGFyWFBvc2l0aW9uLm5leHRYKXtcbiAgICBjaGFyYS5wb3NpdGlvbi54IC09IC4wMVxuICB9XG5cblxuXG4gIHJlbmRlcmVyLnJlbmRlcihzY2VuZSwgY2FtZXJhKTtcbn07XG5cbnJlbmRlcigpO1xuIl19
